<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:v="clr-namespace:WindowOffset.Views"
                    xmlns:res="clr-namespace:WindowOffset.Properties"
                    >
  <Style x:Key="SideOffsetLineStyle" TargetType="{x:Type v:WindowAreaItem}">
    <Setter Property="Panel.ZIndex" Value="-100"/>
    <Setter Property="ContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <Line X1="{Binding X1}" 
                Y1="{Binding Y1}"
                X2="{Binding X2}"
                Y2="{Binding Y2}"
                Stroke="Black"
                StrokeThickness="2"
                />
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style x:Key="SideOffsetStyle" TargetType="{x:Type v:WindowAreaItem}">
    <Setter Property="Canvas.Left" Value="{Binding X}"/>
    <Setter Property="Canvas.Top" Value="{Binding Y}"/>
    <Setter Property="ContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <TextBox Width="40"
                   HorizontalContentAlignment="Right"
                   Text="{Binding Offset}"
                   >
            <TextBox.Margin>
              <MultiBinding Converter="{x:Static v:CenterItemConverter.Instance}">
                <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
              </MultiBinding>
            </TextBox.Margin>
          </TextBox>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="MainOffsetStyle" TargetType="{x:Type v:WindowAreaItem}">
    <Setter Property="Canvas.Left" Value="{Binding X}"/>
    <Setter Property="Canvas.Top" Value="{Binding Y}"/>
    <Setter Property="ContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <TextBox Width="40"
                   HorizontalContentAlignment="Right"
                   Text="{Binding Offset}"
                   >
            <TextBox.Margin>
              <MultiBinding Converter="{x:Static v:CenterItemConverter.Instance}">
                <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
              </MultiBinding>
            </TextBox.Margin>
          </TextBox>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="DimensionStyle" TargetType="{x:Type v:WindowAreaItem}">
    <Setter Property="Canvas.Left" Value="{Binding X}"/>
    <Setter Property="Canvas.Top" Value="{Binding Y}"/>
    <Setter Property="Width" Value="{Binding Width}"/>
    <Setter Property="Height" Value="{Binding Height}"/>
    <Setter Property="ContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <Border x:Name="border" 
                  Margin="0,2"
                  BorderThickness="1,0,1,0"
                  BorderBrush="Black">
            <TextBlock Text="{Binding Value}"
                       TextAlignment="Center"
                       VerticalAlignment="Center"
                       />
          </Border>
          <DataTemplate.Triggers>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsFirst}" Value="False"/>
                <Condition Binding="{Binding IsVertical}" Value="False"/>
              </MultiDataTrigger.Conditions>
              <MultiDataTrigger.Setters>
                <Setter TargetName="border" Property="BorderThickness" Value="0,0,1,0"/>
              </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsFirst}" Value="False"/>
                <Condition Binding="{Binding IsVertical}" Value="True"/>
              </MultiDataTrigger.Conditions>
              <MultiDataTrigger.Setters>
                <Setter TargetName="border" Property="BorderThickness" Value="1,0,0,0"/>
              </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding IsVertical}" Value="True">
              <Setter Property="LayoutTransform">
                <Setter.Value>
                  <RotateTransform Angle="-90"/>
                </Setter.Value>
              </Setter>
            </DataTrigger>
          </DataTemplate.Triggers>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>